#pragma checksum "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "431109db4acce31a5eb31db062d038ceb2c2c8b8"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_EmployeeTimesheet_Process), @"mvc.1.0.view", @"/Views/EmployeeTimesheet/Process.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/EmployeeTimesheet/Process.cshtml", typeof(AspNetCore.Views_EmployeeTimesheet_Process))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\_ViewImports.cshtml"
using Payroll.Web;

#line default
#line hidden
#line 2 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\_ViewImports.cshtml"
using Payroll.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"431109db4acce31a5eb31db062d038ceb2c2c8b8", @"/Views/EmployeeTimesheet/Process.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c22d830b85aae7d6f2014fc1a4ef656594314354", @"/Views/_ViewImports.cshtml")]
    public class Views_EmployeeTimesheet_Process : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml"
  
    /**/

    ViewBag.Title = "Employee DTR";


#line default
#line hidden
            BeginContext(58, 1656, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-6"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Employee Proccessing</h3>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">

                    <div class=""row"">

                        <div class=""col-sm-12"">
                            <!-- select -->
                            <div class=""form-group"">
                                <label>Cutoff</label>
                                <select class=""custom-select"" id=""cutoff""></select>
                            </div>
                            <div class=""form-group"">
                                <button type=""button"" class=""btn btn-block btn-default"" id=""generate"">Generate</button>
                            </div>
                            <div class=""form-group"">
                                <button type=""button"" class");
            WriteLiteral(@"=""btn btn-block btn-default"" id=""process"">Process</button>
                            </div>
                        </div>
                    </div>

                </div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-6"">
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Timesheet Uploading</h3>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div class=""row"">
                        ");
            EndContext();
            BeginContext(1714, 1820, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "1f75ee5d16204d0a9aac817316d4c736", async() => {
                BeginContext(1764, 49, true);
                WriteLiteral("\r\n                            <div class=\"row\">\r\n");
                EndContext();
                BeginContext(2487, 1040, true);
                WriteLiteral(@"                                <div class=""form-group"">
                                    <label for=""exampleInputFile"">Upload excel file</label>
                                    <div class=""input-group"">
                                        <div class=""custom-file"">
                                            <input type=""file"" class=""custom-file-input"" id=""fUpload""
                                                   aria-describedby=""inputGroupFileAddon01"">
                                            <label class=""custom-file-label"" for=""inputGroupFile01"">Choose file</label>
                                        </div>
                                        <div class=""input-group-append"">
                                            <span class=""input-group-text"" id=""btnUpload"" onclick=""Upload();"">Upload</span>
                                        </div>
                                    </div>

                                </div>
                            </div>
        ");
                WriteLiteral("                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3534, 196, true);
            WriteLiteral("\r\n                    </div>\r\n\r\n                </div>\r\n                <!-- /.card-body -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- /.row -->\r\n</div><!-- /.container-fluid -->\r\n");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(3748, 888, true);
                WriteLiteral(@"
    <script type=""application/javascript"">
        $('input[type=""file""]').change(function(e){
            var fileName = e.target.files[0].name;
            $('.custom-file-label').html(fileName);
        });
    </script>

    <script>

        $(document).ready(function () {
            GetCutoff();
        $(""#generate"").click(function () {

            Swal.fire({
                title: 'Generate timesheet for all employee for this cuttoff?',
                //text: ""You won't be able to revert this!"",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.value) {
                    var urli = '");
                EndContext();
                BeginContext(4637, 54, false);
#line 109 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml"
                           Write(Url.Action("GenerateAllEmployee", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(4691, 2040, true);
                WriteLiteral(@"';
                    var id = $('#cutoff').val();
                    var cutoff = $('#cutoff  option:selected').text();
                    Swal.fire({
                        title: 'Please Wait..!',
                        text: 'Is working..',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
                        onOpen: () => {
                            swal.showLoading()
                        }
                    })
                    $.ajax({
                        url: urli + '/' + id,
                        type: ""GET"",
                        error: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Generate Failed!',
                                'Cuttoff ' + cutoff + 'has been failed',
                                'error'
                            )
                        }");
                WriteLiteral(@",
                        success: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process!',
                                'Generate completed',
                                'success'
                            )
                            Grid();
                        }
                    });

                }
            })

        });
        $(""#process"").click(function () {
            Swal.fire({
                title: 'Process all employee for this cuttoff?',
                //text: ""You won't be able to revert this!"",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.value) {
                    var urli = '");
                EndContext();
                BeginContext(6732, 53, false);
#line 160 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml"
                           Write(Url.Action("ProcessAllEmployee", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(6785, 1637, true);
                WriteLiteral(@"';
                    var id = $('#cutoff').val();
                    var cutoff = $('#cutoff  option:selected').text();
                    Swal.fire({
                        title: 'Please Wait..!',
                        text: 'Is working..',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
                        onOpen: () => {
                            swal.showLoading()
                        }
                    })
                    $.ajax({
                        url: urli + '/' + id,
                        type: ""GET"",
                        error: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process Failed!',
                                'Cuttoff ' + cutoff + 'has been failed',
                                'error'
                            )
                        },");
                WriteLiteral(@"
                        success: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process!',
                                'Cuttoff ' + cutoff + 'has been processed',
                                'success'
                            )
                            Grid();
                        }
                    });

                }
            })

        });




        });

        function GetCutoff() {
            $.ajax({
                type: ""GET"",
                url: '");
                EndContext();
                BeginContext(8423, 44, false);
#line 208 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml"
                 Write(Url.Action("GetCutoff", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(8467, 1241, true);
                WriteLiteral(@"',
                data: ""{}"",
                success: function (data) {
                    var s = '';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value=""' + data[i].ref_payroll_cutoff_id + '"">' + data[i].ref_payroll_cutoff_name + '</option>';
                    }
                    $(""#cutoff"").html(s);
                }
            });
        }

        function Upload()
        {
            var files = $('#fUpload').prop(""files"");
              var fdata = new FormData();
              for (var i = 0; i < files.length; i++)
              {
                  fdata.append(""files"", files[i]);
              }
              if (files.length > 0) {
                  Swal.fire({
                        title: 'Please Wait..!',
                        text: 'Is working..',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
              ");
                WriteLiteral("          onOpen: () => {\r\n                            swal.showLoading()\r\n                        }\r\n                    })\r\n                  $.ajax({\r\n                     type: \"POST\",\r\n                     url: \'");
                EndContext();
                BeginContext(9709, 47, false);
#line 241 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Process.cshtml"
                      Write(Url.Action("OnPostUpload", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(9756, 1487, true);
                WriteLiteral(@"',
                     beforeSend: function (xhr) {
                        xhr.setRequestHeader(""XSRF-TOKEN"",
                           $('input:hidden[name=""__RequestVerificationToken""]').val());
                     },
                     data: fdata,
                     contentType: false,
                     processData: false,
                     success: function (response) {
                        alert(response.status);
                        Swal.hideLoading();
                        if (response.status == true) {
                            Swal.fire(
                                'Process!',
                                'Upload completed',
                                'success'
                            )
                        }
                        else {
                            Swal.hideLoading();
                            swal_error(response.message);
                        }

                    },
                    error: function (e) {");
                WriteLiteral(@"
                        Swal.hideLoading();
                            Swal.fire(
                                'Process Failed!',
                                'Error encountered: ' +e.responseText,
                                'error'
                            )
                    }
                  });
              }
              else {
                  alert('Please select a file.')
              }
        }

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
