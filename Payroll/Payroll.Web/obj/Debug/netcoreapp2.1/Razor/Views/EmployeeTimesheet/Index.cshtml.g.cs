#pragma checksum "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ca9e2155c124aa802099260d0e2789e4d1a171af"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_EmployeeTimesheet_Index), @"mvc.1.0.view", @"/Views/EmployeeTimesheet/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/EmployeeTimesheet/Index.cshtml", typeof(AspNetCore.Views_EmployeeTimesheet_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\_ViewImports.cshtml"
using Payroll.Web;

#line default
#line hidden
#line 2 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\_ViewImports.cshtml"
using Payroll.Web.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ca9e2155c124aa802099260d0e2789e4d1a171af", @"/Views/EmployeeTimesheet/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c22d830b85aae7d6f2014fc1a4ef656594314354", @"/Views/_ViewImports.cshtml")]
    public class Views_EmployeeTimesheet_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("main"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
  
    /**/

    ViewBag.Title = "Employee Leave";


#line default
#line hidden
            BeginContext(60, 362, true);
            WriteLiteral(@"<div class=""container-fluid"">
    <div class=""row"">
        <div class=""col-12"">
            <div class=""row"">
                <div class=""col-sm-3"">
                    <!-- select -->
                    <div class=""form-group"">
                        <label>Cutoff</label>
                        <select class=""custom-select"" id=""cutoff""></select>
");
            EndContext();
            BeginContext(524, 158, true);
            WriteLiteral("                    </div>\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n\r\n                </div>\r\n                <div class=\"col-sm-3\">\r\n");
            EndContext();
            BeginContext(904, 1599, true);
            WriteLiteral(@"                </div>
                <div class=""col-sm-3"">
                    <div class=""form-group"">
                        <label>&nbsp;</label>
                        <button type=""button"" class=""btn btn-block btn-default"" id=""process"">Process</button>
                    </div>
                </div>
            </div>
            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Employee DTR Summary</h3>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div id=""jsGrid2""></div>
                </div>
                <!-- /.card-body -->
            </div>

            <div class=""card"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Employee DTR</h3>
                </div>
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div id=""jsGrid1""></div>
                ");
            WriteLiteral(@"</div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
    <!-- /.row -->
</div><!-- /.container-fluid -->


<div class=""modal fade"" id=""myModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" aria-hidden=""true"" data-keyboard=""false"" data-backdrop=""static"">
    <div class=""modal-dialog"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"" id=""myModalLabel"">Update In/Out</h4>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(2503, 609, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "687715f789c6495cb13993d52812730b", async() => {
                BeginContext(2519, 586, true);
                WriteLiteral(@"

                    <input type=""hidden"" id=""employee_timesheet_id"" />
                    <div class=""form-group"">
                        <label for=""Name"">Time In</label>
                        <input type=""text"" class=""form-control"" id=""time_in1"" placeholder=""In"" maxlength=""5"" />
                    </div>
                    <div class=""form-group"">
                        <label for=""Age"">Time Out</label>
                        <input type=""text"" class=""form-control"" id=""time_out1"" placeholder=""Out"" maxlength=""5"" />
                    </div>
                ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3112, 353, true);
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-primary"" id=""btnUpdate"" style=""display:none;"" onclick=""Update();"">Update</button>
                <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">Close</button>
            </div>
        </div>
    </div>
</div>
");
            EndContext();
            DefineSection("scripts", async() => {
                BeginContext(3483, 735, true);
                WriteLiteral(@"
    <script>

        $(document).ready(function () {
            GetCutoff();

            $('#cutoff').change(function () {
                Grid();
                Grid2();

        });
            $(""#process"").click(function () {
            Swal.fire({
                title: 'Process Cuttoff?',
                //text: ""You won't be able to revert this!"",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.value) {
                    var urli = '");
                EndContext();
                BeginContext(4219, 51, false);
#line 112 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                           Write(Url.Action("ProcessTimesheet", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(4270, 1872, true);
                WriteLiteral(@"';
                    var id = $('#cutoff').val();
                    var cutoff = $('#cutoff  option:selected').text();
                    Swal.fire({
                        title: 'Please Wait..!',
                        text: 'Is working..',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
                        onOpen: () => {
                            swal.showLoading()
                        }
                    })
                    $.ajax({
                        url: urli + '/' + id,
                        type: ""GET"",
                        error: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process Failed!',
                                'Cuttoff ' + cutoff + 'has been failed',
                                'error'
                            )
                        },");
                WriteLiteral(@"
                        success: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process!',
                                'Cuttoff ' + cutoff + ' has been processed',
                                'success'
                            )
                            Grid();
                        }
                    });

                }
            })

        });

        });

        function Grid() {
                $(""#jsGrid1"").jsGrid({

                width: ""100%"",
                pageSize: 15,
                sorting: true,
                paging: true,
                autoload: true,
                controller: {
                    loadData: function (filter) {
                        var urli = '");
                EndContext();
                BeginContext(6143, 42, false);
#line 164 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                               Write(Url.Action("GetData", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(6185, 6765, true);
                WriteLiteral(@"';
                        var id = $('#cutoff').val();
                        
                        return $.ajax({
                            type: ""GET"",
                            url: urli + '/' + id,
                            data: filter,
                            dataType: ""JSON"",
                        });
                    }
                },

                fields: [
                    {
                        name: ""shift_date"", title: ""Date"", type: ""text"", width: 40,
                        itemTemplate: function (value, item) {
                            var d = value.slice(0, 10).split('-');
                            var val = d[1] + '/' + d[2] + '/' + d[0];
                            return '<a href=""#"" onclick=""return getbyID(' + item.employee_timesheet_id + ')"">' + val + '</a>';
                        },
                    },
                    {
                        name: ""shift_date"", title: ""Day"", type: ""text"", width: 30,
                 ");
                WriteLiteral(@"       itemTemplate: function (value, item) {
                            var weekday = [""SUN"", ""MON"", ""TUE"", ""WED"", ""THU"", ""FRI"", ""SAT""];
                            var a = new Date(value);
                            return weekday[a.getDay()];
                        },
                    },
                    { name: ""shift_name"", title: ""Shift"", width: 40 },
                    { name: ""date_type_code"", title: ""Type"", width: 30 },
                    {
                        name: ""required_hour"", title: ""RqHr"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""rendered_hour"", title: ""RdHr"", type: ""number"", width: 2");
                WriteLiteral(@"0,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""time_in1"", title: ""In"", type: ""text"", width: 30,
                        itemTemplate: function (value,item) {
                            if (value == null && value != 0) {
                                return item.time_in2;
                            } else {
                                return value;
                            }

                        }
                    },
                    {
                        name: ""time_out1"", title: ""Out"", type: ""text"", width: 30,
                        itemTemplate: function (value, item) {
                            if (value == nul");
                WriteLiteral(@"l && value != 0) {
                                return item.time_out2;
                            } else {
                                return value;
                            }

                        }
                    },
                    { name: ""ot_in"", title: ""OtIn"", type: ""number"", width: 30 },
                    { name: ""ot_out"", title: ""OTOut"", type: ""number"", width: 30 },
                    {
                        name: ""late"", title: ""Late"", type: ""number"", width: 20,
                        itemTemplate: function (value) {

                            if (value != null && value != 0) {
                                return '<span style=""color: red;"">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""undertime"", title: ""UT"", type: ""number"", width: 20,
      ");
                WriteLiteral(@"                  itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style=""color: red;"">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""ot"", title: ""OT"", type: ""number"", width: 20,

                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""ot8"", title: ""OT8"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                       ");
                WriteLiteral(@"     if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""night_dif"", title: ""ND"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""absent"", title: ""AB"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style=""color: red;"">' + ");
                WriteLiteral(@"value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },

                ]
                });
        }
        function Grid2() {
           
                $(""#jsGrid2"").jsGrid({
                    width: ""100%"",
                    pageSize: 15,
                sorting: true,
                paging: true,
                autoload: true,
                controller: {
                    loadData: function (filter) {
                        var urli = '");
                EndContext();
                BeginContext(12951, 45, false);
#line 323 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                               Write(Url.Action("GetDataSum", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(12996, 4126, true);
                WriteLiteral(@"';
                        var id = $('#cutoff').val();
                        return $.ajax({
                            type: ""GET"",
                            url: urli + '/' + id,
                            data: filter,
                            dataType: ""JSON"",
                        });
                    }
                },

               fields: [
                     {
                        name: ""required_hour"", title: ""RqHr"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""rendered_hour"", title: ""RdHr"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
      ");
                WriteLiteral(@"                      if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    
                   {
                        name: ""late"", title: ""Late"", type: ""number"", width: 20,
                        itemTemplate: function (value) {

                            if (value != null && value != 0) {
                                return '<span style=""color: red;"">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""undertime"", title: ""UT"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && va");
                WriteLiteral(@"lue != 0) {
                                return '<span style=""color: red;"">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""ot"", title: ""OT"", type: ""number"", width: 20,

                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                  
                    {
                        name: ""night_dif"", title: ""ND"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                retur");
                WriteLiteral(@"n value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: ""absent"", title: ""AB"", type: ""number"", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style=""color: red;"">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },

                ]
                });
        }
        function getbyID(EmpID) {
            $('#time_in1').css('border-color', 'lightgrey');
            $('#time_out1').css('border-color', 'lightgrey');
            $('#time_in1').mask(""##:##"", { reverse: false });
            $('#time_out1').mask(""##:##"", { reverse: false");
                WriteLiteral(" });\r\n            var urli = \'");
                EndContext();
                BeginContext(17123, 42, false);
#line 425 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                   Write(Url.Action("GetByID", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(17165, 1680, true);
                WriteLiteral(@"';
            var id = EmpID;
            $.ajax({

                url: urli +'/'+ id,
                typr: ""GET"",
                contentType: ""application/json;charset=UTF-8"",
                dataType: ""json"",
                success: function (result) {
                    $('#employee_timesheet_id').val(result.employee_timesheet_id);
                    $('#time_in1').val(result.time_in1);
                    $('#time_out1').val(result.time_out1);
                    $('#myModal').modal('show');
                    $('#btnUpdate').show();
                },
                error: function (errormessage) {
                    swal_error('');
                }
            });
            return false;
        }

        //function for updating employee's record
        function Update() {
            var res = validate();
            if (res == false) {
                return false;
            }

            var dataObject = JSON.stringify({
                'empid': $('#emp");
                WriteLiteral(@"loyee_timesheet_id').val(),
                'timein': $('#time_in1').val(),
                'timeout': $('#time_out1').val()
            });
            Swal.fire({
                title: 'Please Wait..!',
                text: 'Is working..',
                allowOutsideClick: false,
                allowEscapeKey: false,
                allowEnterKey: false,
                onOpen: () => {
                    swal.showLoading()
                }
            })
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '");
                EndContext();
                BeginContext(18846, 50, false);
#line 473 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                 Write(Url.Action("UpdateTimesheet", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(18896, 1333, true);
                WriteLiteral(@"',
                data: dataObject,

                success: function (data) {
                    Grid();
                    $('#myModal').modal('hide');
                    $('#employee_timesheet_id').val("""");
                    $('#time_in1').val("""");
                    $('#time_out1').val("""");
                    Swal.hideLoading();
                    swal_success();
                },
                error: function (errormessage) {
                    Swal.hideLoading();
                    swal_error('');
                }
            });
        }

        function validate() {
            var isValid = true;
            if ($('#time_in1').val().trim() == """") {
                $('#time_in1').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#time_in1').css('border-color', 'lightgrey');
            }
            if ($('#time_out1').val().trim() == """") {
                $('#time_out1').css('border-color', '");
                WriteLiteral(@"Red');
                isValid = false;
            }
            else {
                $('#time_out1').css('border-color', 'lightgrey');
            }

            return isValid;
        }

        function GetCutoff() {
            $.ajax({
                type: ""GET"",
                url: '");
                EndContext();
                BeginContext(20230, 44, false);
#line 515 "C:\Users\biboy\Source\repos\Payroll\Payroll.Web\Views\EmployeeTimesheet\Index.cshtml"
                 Write(Url.Action("GetCutoff", "EmployeeTimesheet"));

#line default
#line hidden
                EndContext();
                BeginContext(20274, 512, true);
                WriteLiteral(@"',
                data: ""{}"",
                success: function (data) {
                    var s = '';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value=""' + data[i].ref_payroll_cutoff_id + '"">' + data[i].ref_payroll_cutoff_name + '</option>';
                    }
                    $(""#cutoff"").html(s);
                    Grid();
                    Grid2();
                }

            });

            
        }
    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
