@{
    /**/

    ViewBag.Title = "Employee Leave";

}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="row">
                <div class="col-sm-3">
                    <!-- select -->
                    <div class="form-group">
                        <label>Cutoff</label>
                        <select class="custom-select" id="cutoff"></select>
                        @*<button type="button" class="btn btn-block btn-default">Default</button>*@
                    </div>
                </div>
                <div class="col-sm-3">

                </div>
                <div class="col-sm-3">
                    @*<div class="form-group">
                    <label>&nbsp;</label>
                    <button type="button" class="btn btn-block btn-default">Generate Timesheet</button>
                </div>*@
                </div>
                <div class="col-sm-3">
                    <div class="form-group">
                        <label>&nbsp;</label>
                        <button type="button" class="btn btn-block btn-default" id="process">Process</button>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Employee DTR Summary</h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div id="jsGrid2"></div>
                </div>
                <!-- /.card-body -->
            </div>

            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">Employee DTR</h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <div id="jsGrid1"></div>
                </div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
    <!-- /.row -->
</div><!-- /.container-fluid -->


<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Update In/Out</h4>
            </div>
            <div class="modal-body">
                <form id="main">

                    <input type="hidden" id="employee_timesheet_id" />
                    <div class="form-group">
                        <label for="Name">Time In</label>
                        <input type="text" class="form-control" id="time_in1" placeholder="In" maxlength="5" />
                    </div>
                    <div class="form-group">
                        <label for="Age">Time Out</label>
                        <input type="text" class="form-control" id="time_out1" placeholder="Out" maxlength="5" />
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnUpdate" style="display:none;" onclick="Update();">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section scripts {
    <script>

        $(document).ready(function () {
            GetCutoff();

            $('#cutoff').change(function () {
                Grid();
                Grid2();

        });
            $("#process").click(function () {
            Swal.fire({
                title: 'Process Cuttoff?',
                //text: "You won't be able to revert this!",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes',
                allowOutsideClick: false,
            }).then((result) => {
                if (result.value) {
                    var urli = '@Url.Action("ProcessTimesheet", "EmployeeTimesheet")';
                    var id = $('#cutoff').val();
                    var cutoff = $('#cutoff  option:selected').text();
                    Swal.fire({
                        title: 'Please Wait..!',
                        text: 'Is working..',
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        allowEnterKey: false,
                        onOpen: () => {
                            swal.showLoading()
                        }
                    })
                    $.ajax({
                        url: urli + '/' + id,
                        type: "GET",
                        error: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process Failed!',
                                'Cuttoff ' + cutoff + 'has been failed',
                                'error'
                            )
                        },
                        success: function (response) {
                            Swal.hideLoading();
                            Swal.fire(
                                'Process!',
                                'Cuttoff ' + cutoff + ' has been processed',
                                'success'
                            )
                            Grid();
                        }
                    });

                }
            })

        });

        });

        function Grid() {
                $("#jsGrid1").jsGrid({

                width: "100%",
                pageSize: 15,
                sorting: true,
                paging: true,
                autoload: true,
                controller: {
                    loadData: function (filter) {
                        var urli = '@Url.Action("GetData", "EmployeeTimesheet")';
                        var id = $('#cutoff').val();
                        
                        return $.ajax({
                            type: "GET",
                            url: urli + '/' + id,
                            data: filter,
                            dataType: "JSON",
                        });
                    }
                },

                fields: [
                    {
                        name: "shift_date", title: "Date", type: "text", width: 40,
                        itemTemplate: function (value, item) {
                            var d = value.slice(0, 10).split('-');
                            var val = d[1] + '/' + d[2] + '/' + d[0];
                            return '<a href="#" onclick="return getbyID(' + item.employee_timesheet_id + ')">' + val + '</a>';
                        },
                    },
                    {
                        name: "shift_date", title: "Day", type: "text", width: 30,
                        itemTemplate: function (value, item) {
                            var weekday = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"];
                            var a = new Date(value);
                            return weekday[a.getDay()];
                        },
                    },
                    { name: "shift_name", title: "Shift", width: 40 },
                    { name: "date_type_code", title: "Type", width: 30 },
                    {
                        name: "required_hour", title: "RqHr", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "rendered_hour", title: "RdHr", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "time_in1", title: "In", type: "text", width: 30,
                        itemTemplate: function (value,item) {
                            if (value == null && value != 0) {
                                return item.time_in2;
                            } else {
                                return value;
                            }

                        }
                    },
                    {
                        name: "time_out1", title: "Out", type: "text", width: 30,
                        itemTemplate: function (value, item) {
                            if (value == null && value != 0) {
                                return item.time_out2;
                            } else {
                                return value;
                            }

                        }
                    },
                    { name: "ot_in", title: "OtIn", type: "number", width: 30 },
                    { name: "ot_out", title: "OTOut", type: "number", width: 30 },
                    {
                        name: "late", title: "Late", type: "number", width: 20,
                        itemTemplate: function (value) {

                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "undertime", title: "UT", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "ot", title: "OT", type: "number", width: 20,

                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "ot8", title: "OT8", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "night_dif", title: "ND", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "absent", title: "AB", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },

                ]
                });
        }
        function Grid2() {
           
                $("#jsGrid2").jsGrid({
                    width: "100%",
                    pageSize: 15,
                sorting: true,
                paging: true,
                autoload: true,
                controller: {
                    loadData: function (filter) {
                        var urli = '@Url.Action("GetDataSum", "EmployeeTimesheet")';
                        var id = $('#cutoff').val();
                        return $.ajax({
                            type: "GET",
                            url: urli + '/' + id,
                            data: filter,
                            dataType: "JSON",
                        });
                    }
                },

               fields: [
                     {
                        name: "required_hour", title: "RqHr", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "rendered_hour", title: "RdHr", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    
                   {
                        name: "late", title: "Late", type: "number", width: 20,
                        itemTemplate: function (value) {

                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "undertime", title: "UT", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "ot", title: "OT", type: "number", width: 20,

                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                  
                    {
                        name: "night_dif", title: "ND", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return value.toFixed(2);
                            } else {
                                return '0.00';
                            }

                        },
                    },
                    {
                        name: "absent", title: "AB", type: "number", width: 20,
                        itemTemplate: function (value) {
                            if (value != null && value != 0) {
                                return '<span style="color: red;">' + value.toFixed(2) + '</span>';
                            } else {
                                return '0.00';
                            }

                        },
                    },

                ]
                });
        }
        function getbyID(EmpID) {
            $('#time_in1').css('border-color', 'lightgrey');
            $('#time_out1').css('border-color', 'lightgrey');
            $('#time_in1').mask("##:##", { reverse: false });
            $('#time_out1').mask("##:##", { reverse: false });
            var urli = '@Url.Action("GetByID", "EmployeeTimesheet")';
            var id = EmpID;
            $.ajax({

                url: urli +'/'+ id,
                typr: "GET",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                success: function (result) {
                    $('#employee_timesheet_id').val(result.employee_timesheet_id);
                    $('#time_in1').val(result.time_in1);
                    $('#time_out1').val(result.time_out1);
                    $('#myModal').modal('show');
                    $('#btnUpdate').show();
                },
                error: function (errormessage) {
                    swal_error('');
                }
            });
            return false;
        }

        //function for updating employee's record
        function Update() {
            var res = validate();
            if (res == false) {
                return false;
            }

            var dataObject = JSON.stringify({
                'empid': $('#employee_timesheet_id').val(),
                'timein': $('#time_in1').val(),
                'timeout': $('#time_out1').val()
            });
            Swal.fire({
                title: 'Please Wait..!',
                text: 'Is working..',
                allowOutsideClick: false,
                allowEscapeKey: false,
                allowEnterKey: false,
                onOpen: () => {
                    swal.showLoading()
                }
            })
            $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: '@Url.Action("UpdateTimesheet", "EmployeeTimesheet")',
                data: dataObject,

                success: function (data) {
                    Grid();
                    $('#myModal').modal('hide');
                    $('#employee_timesheet_id').val("");
                    $('#time_in1').val("");
                    $('#time_out1').val("");
                    Swal.hideLoading();
                    swal_success();
                },
                error: function (errormessage) {
                    Swal.hideLoading();
                    swal_error('');
                }
            });
        }

        function validate() {
            var isValid = true;
            if ($('#time_in1').val().trim() == "") {
                $('#time_in1').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#time_in1').css('border-color', 'lightgrey');
            }
            if ($('#time_out1').val().trim() == "") {
                $('#time_out1').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#time_out1').css('border-color', 'lightgrey');
            }

            return isValid;
        }

        function GetCutoff() {
            $.ajax({
                type: "GET",
                url: '@Url.Action("GetCutoff", "EmployeeTimesheet")',
                data: "{}",
                success: function (data) {
                    var s = '';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].ref_payroll_cutoff_id + '">' + data[i].ref_payroll_cutoff_name + '</option>';
                    }
                    $("#cutoff").html(s);
                    Grid();
                    Grid2();
                }

            });

            
        }
    </script>
}
