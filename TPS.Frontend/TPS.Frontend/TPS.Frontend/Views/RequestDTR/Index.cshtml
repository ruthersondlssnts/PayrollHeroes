@{
    ViewData["Title"] = "DTR Requests";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <!-- /.card-header -->
            <div class="card-body">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <button type="button" class="btn btn-block btn-primary" id="process" onclick="ModalAddEdit('@Url.Action("AddOrEdit","RequestDTR")','Request DTR')"><i class="fas fa-plus"></i> Create</button>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table id="rqstdtr" class="table table-bordered table-striped dt-responsive nowrap" style="width:100%">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th data-priority="1">Date</th>
                                    <th>Time in</th>
                                    <th>Time out</th>
                                    <th>Remarks</th>
                                    <th>Status</th>
                                    <th>Approver</th>
                                    <th data-priority="2">Action</th>
                                </tr>
                            </thead>

                        </table>
                    </div>

                </div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
</div>
<!-- /.row -->
<!-- /.modal -->
<div class="modal fade" id="form-modal" tabindex="-1" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@section scripts {

    <script>
        function DateTimePickerSetup(isEdit) {
            if (isEdit) {
                $('#date-shift').datetimepicker({
                    format: 'L',
                    date: $('#ShiftDate').val()
                });
            }
            else {
                $('#date-shift').datetimepicker({
                    format: 'L',
                    date: moment()
                });
            }

            $('#time-in').datetimepicker({
                format: 'LT',
                date: $('#ActualIn').val()
            });
            $('#time-out').datetimepicker({
                format: 'LT',
                date: $('#ActualOut').val()
            });
            $("#time-in").on("change.datetimepicker", function (e) {
                $('#ActualIn').val(moment(e.date).format("HH:mm"));
            });
            $("#time-out").on("change.datetimepicker", function (e) {
                $('#ActualOut').val(moment(e.date).format("HH:mm"));
            });
        }
        function GetShifts() {
            $.ajax({
                url: "/RefShift/GetShifts",
                type: "get",
                success: function (res) {
                    var data = res.data
                    var s = '';
                    for (var i = 0; i < data.length; i++) {
                        if ($("#ShiftName").val() == data[i].shiftName) {
                            s += '<option selected value="' + data[i].id + '">' + data[i].shiftName + '</option>';
                        }
                        else {
                            s += '<option value="' + data[i].id + '">' + data[i].shiftName + '</option>';
                        }

                    }
                    $("#shiftselect").html(s);
                    $('#shiftselect').on('change', function () {
                        $('#ShiftName').val($("#shiftselect option:selected").text());
                    });
                },
                error: function (err) {
                    console.log(err)
                }
            });
        }
        function FormSetup(isEdit) {
            DateTimePickerSetup(isEdit);
            GetShifts();
        }


        function ModalAddEdit(url, title,isEdit) {
            $.ajax({
                type: "GET",
                url: url,
                success: function (res) {
                    FormShow(res, null, title)
                    FormSetup(isEdit)
                }
            });
        }
        function jQueryAjaxDelete(form) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    try {
                        $.ajax({
                            type: 'POST',
                            url: form.action,
                            data: new FormData(form),
                            contentType: false,
                            processData: false,
                            success: function (result) {
                               rqstDtrAjaxTable.ajax.reload(null, false);
                               AlertDeleted();
                            },
                            error: function (result) {
                               AlertError();
                            }
                        });
                    } catch (ex) {
                        console.log(ex)
                        AlertError();
                    }

                }
            })
            //prevent default form submit event
            return false;
        }
        function jQueryAjaxPost(form) {
            try {

                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.isValid) {
                            FormHide();
                            isSuccessPost = true;
                            AlertSuccess()
                        }
                        else {
                            FormShow(res.html, res.error);
                            isSuccessPost = false;
                            FormSetup(true);
                        }

                    },
                    error: function (err) {
                        isSuccessPost = false;
                        FormHide();
                        console.log(err)
                        AlertError()
                    }
                }).done(function () {
                    //unobstrusive validation
                    $("form").each(function () { $.data($(this)[0], 'validator', false); });
                    $.validator.unobtrusive.parse("form");
                });
                //to prevent default form submit event
                return false;
            } catch (ex) {
                isSuccessPost = false;
                FormHide();
                AlertError()
                console.log(ex)
            }
        }
        var rqstDtrAjaxTable = $("#rqstdtr").DataTable({
            ajax: {
                url: "/RequestDTR/GetUserRequestsDTR",
                type: "POST",
                datatype: "json"
            },
            columnDefs: [
                {   targets: '_all', defaultContent: '-' },
                { targets: 0, className: 'dtr-control', orderable: false }
            ],
            columns: [
                {   defaultContent: ""  },
                {
                    data: "shiftDate", autoWidth: true, render: function (data, type, row) {
                        return EditLink('@Url.Action("AddOrEdit", "RequestDTR")/' + row.id + '', 'Request DTR Information', moment(data).format("ll"));
                    }
                },
                {   data: "actualIn", autoWidth: true, render: function (data) { return moment(data).format("LT");}},
                {   data: "actualOut", autoWidth: true, render: function (data) { return moment(data).format("LT");} },
                {   data: "remarks", autoWidth: true },
                {   data: "approvalStatusName", autoWidth: true },
                {   data: "approverName", autoWidth: true },
                {
                    render: function (data, type, row) {
                        if (row.approvalStatusName != 'APPROVED')
                            return DeleteLink('@Url.Action("Delete", "RequestDTR")/'+row.id+'');
                    }
                },
            ],
            order: [1, "asc"],
            filter: true,
            serverSide: true,
            processing: true,
            language: {
                "processing": "Processing... Please wait"
            }
        });

        $(document).ready(function () {

            DeleteNotifications(2);

            //refresh grid after submit
            $('#form-modal').on('hidden.bs.modal', function () {
                if (isSuccessPost) {
                   rqstDtrAjaxTable.ajax.reload(null, false);
                    isSuccessPost = false;
                }
            })

        });

    </script>

}
