@{
    ViewData["Title"] = "Leave Requests";
}
<div class="row">
    <div class="col-12">
        <div class="card">
            <!-- /.card-header -->
            <div class="card-body">
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <button type="button" class="btn btn-block btn-primary" id="process" onclick="ModalAddEdit('@Url.Action("AddOrEdit","RequestLeave")','Request Leave Information')"><i class="fas fa-plus"></i> Create</button>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table id="rqstleave" class="table table-bordered table-striped dt-responsive nowrap" style="width:100%">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th data-priority="1">Leave Type</th>
                                    <th>From</th>
                                    <th>To</th>
                                    <th>Days</th>
                                    <th>Remarks</th>
                                    <th>Status</th>
                                    <th>Approver</th>
                                    <th data-priority="2">Action</th>
                                </tr>
                            </thead>

                        </table>
                    </div>
                </div>

            </div>
            <!-- /.card-body -->
        </div>
    </div>
</div>
<!-- /.row -->
<!-- /.modal -->
<div class="modal fade" id="form-modal" tabindex="-1" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title"></h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">

            </div>

        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

@section scripts {

    <script>
        function DateTimePickerSetup(isEdit) {

            if (isEdit) {
                $('#date-start').datetimepicker({
                    format: 'L',
                    date: $('#date-start').val(),
                });
                $('#date-end').datetimepicker({
                    format: 'L',
                    date: $('#date-end').val(),
                });
            }
            else {
                $('#date-start').datetimepicker({
                    format: 'L',
                    date: moment(),
                });
                $('#date-end').datetimepicker({
                    format: 'L',
                    date: moment(),
                });
            }
            $("#date-start").on("change.datetimepicker", function (e) {
                $('#date-end').datetimepicker('minDate', e.date);
                ComputeLeaveDay();
                SetHalfDayCheckbox(true,true)
            });
            $("#date-end").on("change.datetimepicker", function (e) {
                $('#date-start').datetimepicker('maxDate', e.date);
                ComputeLeaveDay();
                SetHalfDayCheckbox(true,true)
            });

        }
        function ComputeLeaveDay() {
            var start = moment($("#date-start").val());
            var end = moment($("#date-end").val());
            $("#LeaveDay").val(end.diff(start, 'days') + 1);
        }
        function SetHalfDayCheckbox(isFromEvent,isFromDatePick) {
            if (isFromEvent) {
                var elLeaveDay = $("#LeaveDay");
                var numDays = parseFloat(elLeaveDay.val())

               //if checkbox checked
                if ($('#IsHalf').is(':checked')) {
                    numDays -= .5;
                    if (numDays <= 0.5) {
                        elLeaveDay.val("0.5")
                    }
                    else {
                        elLeaveDay.val(numDays);
                    }
                    $('#firsthalfradio').prop("disabled", false);
                    $('#secondhalfradio').prop("disabled", false);
                }
                else {
                    if (!isFromDatePick)
                        numDays += .5;

                    elLeaveDay.val(numDays);
                    $('#firsthalfradio').prop("checked", true);
                    $('#firsthalfradio').prop("disabled", true);
                    $('#secondhalfradio').prop("disabled", true);
                }

            }
            else {
                if ($('#IsHalf').is(':checked')) {
                    $('#firsthalfradio').prop("disabled", false);
                    $('#secondhalfradio').prop("disabled", false);
                }
            }
        }

        function FormSetup(isEdit) {

            DateTimePickerSetup(isEdit);
            GetLeaveTypesAjax();
            SetHalfDayCheckbox();

            //checkbox
            $('#IsHalf').change(function () {
                SetHalfDayCheckbox(true);
            });

            //get balance based on leave select
            $('#LeaveTypeId').change(function () {
                GetEmployeeBalanceAjax(this.value)
            });

            if (isEdit) {
                //computation for editing leave day, save previous leave days
                $('#PrevLeaveDay').val($('#LeaveDay').val())
                //remove .0
                $('#LeaveDay').val($('#LeaveDay').val().replace('.0', ''))
            }
            else {
                $('#LeaveDay').val("1")
            }
        }

        //for select options
        function GetLeaveTypesAjax() {
            $.ajax({
                url: "/RefLeaveType/GetLeaveTypes",
                type: "get",
                success: function (res) {
                    var s = '';
                    var data = res.data
                    for (var i = 0; i < data.length; i++) {

                        if ($("#hidden_leavetype").val() == data[i].id)
                            s += '<option selected value="' + data[i].id + '">' + data[i].leaveTypeName + '</option>';
                        else
                            s += '<option value="' + data[i].id + '">' + data[i].leaveTypeName + '</option>';
                    }
                    $("#LeaveTypeId").html(s);
                    GetEmployeeBalanceAjax($("#LeaveTypeId").val())
                },
                error: function (err) {
                    console.log(err)
                }
            });
        }
        function GetEmployeeBalanceAjax(leaveType) {
            $.ajax({
                url: "/EmployeeBalance/GetEmployeeLeaveTypeBalance",
                type: "get",
                data: { leaveTypeId: leaveType },
                success: function (data) {
                        if (data == null) {
                            $("#input_balance").val("0")
                        }
                        else {
                            $("#input_balance").val(data.quantity);
                        }
                },
                error: function (err) {
                    console.log(err)
                }
            });
        }

        //form actions
        function ModalAddEdit(url, title, isEdit) {
            $.ajax({
                type: "GET",
                url: url,
                success: function (res) {
                    FormShow(res, null, title)
                    FormSetup(isEdit)
                }
            });
        }
        function jQueryAjaxDelete(form) {
            Swal.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    try {
                        $.ajax({
                            type: 'POST',
                            url: form.action,
                            data: new FormData(form),
                            contentType: false,
                            processData: false,
                            success: function (result) {
                                rqstLeaveAjaxTable.ajax.reload(null, false);
                                AlertDeleted();
                            },
                            error: function (result) {
                                AlertError();
                            }
                        });
                    } catch (ex) {
                        console.log(ex)
                        AlertError();
                    }

                }
            })


            //prevent default form submit event
            return false;
        }
        function jQueryAjaxPost(form) {
            $("#LeaveTypeName").val($("#LeaveTypeId :selected").text());
            try {
                $.ajax({
                    type: 'POST',
                    url: form.action,
                    data: new FormData(form),
                    contentType: false,
                    processData: false,
                    success: function (res) {
                        if (res.isValid) {
                            FormHide();
                            isSuccessPost = true;
                            AlertSuccess()
                        }
                        else {
                            FormShow(res.html, res.error);
                            isSuccessPost = false;
                            FormSetup(true);
                        }
                    },
                    error: function (err) {
                        isSuccessPost = false;
                        FormHide();
                        AlertError()
                        console.log(err)
                    }
                }).done(function () {
                    //unobstrusive validation
                    $("form").each(function () { $.data($(this)[0], 'validator', false); });
                    $.validator.unobtrusive.parse("form");
                });
                //to prevent default form submit event
                return false;
            } catch (ex) {
                isSuccessPost = false;
                FormHide();
                AlertError()
                console.log(ex)
            }
        }

        //table
        var rqstLeaveAjaxTable = $("#rqstleave").DataTable({
            ajax: {
                url: "/RequestLeave/GetUserRequestsLeave",
                type: "POST",
                datatype: "json"
            },
            columnDefs: [
                {   targets: '_all', defaultContent: '-' },
                { targets: 0, className: 'dtr-control', orderable: false }
            ],
            columns: [
                {   defaultContent: ""  },
                {
                    data: "leaveTypeName", autoWidth: true, render: function (data, type, row) {
                        return EditLink('@Url.Action("AddOrEdit", "RequestLeave")/' + row.id + '', 'Request Leave Information',data);
                    }
                },
                {   data: "dateStart", autoWidth: true, render: function (data) { return moment(data).format("ll");}},
                {   data: "dateEnd", autoWidth: true, render: function (data) { return moment(data).format("ll");} },
                {
                    data: "leaveDay", autoWidth: true, render: function (data, type, row) {
                        if (data == 0.5) {
                            if (row.isFirstHalf)
                                return "First Half";
                            else
                                return "Second Half"
                        }
                        else
                            return data;

                    }
                },
                {   data: "remarks", autoWidth: true },
                {   data: "approvalStatusName", autoWidth: true },
                {   data: "approverName", autoWidth: true },
                {
                    render: function (data, type, row) {
                        if (row.approvalStatusName != 'APPROVED')                      
                            return DeleteLink('@Url.Action("Delete", "RequestLeave")/'+row.id+'');
                    }
                },
            ],
            order: [1, "asc"],
            filter: true,
            serverSide: true,
            processing: true,
            language: {
                "processing": "Processing... Please wait"
            }
        });

        $(document).ready(function () {
            DeleteNotifications(6);


            //refresh grid after submit
            $('#form-modal').on('hidden.bs.modal', function () {
                if (isSuccessPost) {
                    rqstLeaveAjaxTable.ajax.reload(null, false);
                    isSuccessPost = false;
                }
            })

        });

    </script>

}